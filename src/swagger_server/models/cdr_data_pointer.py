# coding: utf-8

from __future__ import absolute_import
from swagger_server.models.labels import Labels
from .base_model_ import Model
from datetime import date, datetime
from typing import List, Dict
from ..util import deserialize_model


class CdrDataPointer(Model):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, name=None, uri=None, individual_names=None, all_individuals=None, labels=None):
        """
        CdrDataPointer - a model defined in Swagger

        :param name: The name of this CdrDataPointer.
        :type name: str
        :param uri: The uri of this CdrDataPointer.
        :type uri: str
        :param individual_names: The individual_names of this CdrDataPointer.
        :type individual_names: List[str]
        :param all_individuals: The all_individuals of this CdrDataPointer.
        :type all_individuals: bool
        :param labels: The labels of this CdrDataPointer.
        :type labels: Labels
        """
        self.swagger_types = {
            'name': str,
            'uri': str,
            'individual_names': List[str],
            'all_individuals': bool,
            'labels': Labels
        }

        self.attribute_map = {
            'name': 'name',
            'uri': 'uri',
            'individual_names': 'individual_names',
            'all_individuals': 'all_individuals',
            'labels': 'labels'
        }

        self._name = name
        self._uri = uri
        self._individual_names = individual_names
        self._all_individuals = all_individuals
        self._labels = labels

    @classmethod
    def from_dict(cls, dikt):
        """
        Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The CdrDataPointer of this CdrDataPointer.
        :rtype: CdrDataPointer
        """
        return deserialize_model(dikt, cls)

    @property
    def name(self):
        """
        Gets the name of this CdrDataPointer.
        Server generated.

        :return: The name of this CdrDataPointer.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """
        Sets the name of this CdrDataPointer.
        Server generated.

        :param name: The name of this CdrDataPointer.
        :type name: str
        """

        self._name = name

    @property
    def uri(self):
        """
        Gets the uri of this CdrDataPointer.
        Unique within a dataset.

        :return: The uri of this CdrDataPointer.
        :rtype: str
        """
        return self._uri

    @uri.setter
    def uri(self, uri):
        """
        Sets the uri of this CdrDataPointer.
        Unique within a dataset.

        :param uri: The uri of this CdrDataPointer.
        :type uri: str
        """

        self._uri = uri

    @property
    def individual_names(self):
        """
        Gets the individual_names of this CdrDataPointer.
        One-of individual_names or all_individuals; full individual names of the form 'datasets/*/individuals/*'.

        :return: The individual_names of this CdrDataPointer.
        :rtype: List[str]
        """
        return self._individual_names

    @individual_names.setter
    def individual_names(self, individual_names):
        """
        Sets the individual_names of this CdrDataPointer.
        One-of individual_names or all_individuals; full individual names of the form 'datasets/*/individuals/*'.

        :param individual_names: The individual_names of this CdrDataPointer.
        :type individual_names: List[str]
        """

        self._individual_names = individual_names

    @property
    def all_individuals(self):
        """
        Gets the all_individuals of this CdrDataPointer.
        One-of individual_names or all_individuals.

        :return: The all_individuals of this CdrDataPointer.
        :rtype: bool
        """
        return self._all_individuals

    @all_individuals.setter
    def all_individuals(self, all_individuals):
        """
        Sets the all_individuals of this CdrDataPointer.
        One-of individual_names or all_individuals.

        :param all_individuals: The all_individuals of this CdrDataPointer.
        :type all_individuals: bool
        """

        self._all_individuals = all_individuals

    @property
    def labels(self):
        """
        Gets the labels of this CdrDataPointer.

        :return: The labels of this CdrDataPointer.
        :rtype: Labels
        """
        return self._labels

    @labels.setter
    def labels(self, labels):
        """
        Sets the labels of this CdrDataPointer.

        :param labels: The labels of this CdrDataPointer.
        :type labels: Labels
        """

        self._labels = labels

